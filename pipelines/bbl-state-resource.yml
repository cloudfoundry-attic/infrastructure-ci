---
groups:
- name: bbl-state-resource
  jobs:
  - bbl-state-resource-units
  - build-bbl-state-release-docker
  - bbl-state-resource-acceptance
  - bbl-up
  - bbl-pool-up
  - bbl-state-resource-tag-latest

resource_types:
- name: bbl-state-resource
  type: docker-image
  source:
    repository: cfinfrastructure/bbl-state-resource
    tag: ci

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: ubuntu-xenial-stemcell-gcp
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent
    version_family: 97.latest

- name: bbl-release-official
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-bootloader
    access_token: ((cf_infra_bot_user_github_access_token))
    drafts: false

- name: test-bbl-state
  type: bbl-state-resource
  source:
    bucket: test-bbl-state-resource
    iaas: gcp
    gcp_region: us-east1
    gcp_service_account_key: ((bbl_gcp_service_account_key))

- name: bbl-state-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/infrastructure-ci-deployment-locks.git
    branch: master
    pool: bbl-states
    private_key: ((cf_infra_bot_github_user.private_key))

- name: cfcr-bosh-deployment
  type: bosh-deployment
  source:
    deployment: cfcr

- name: cfcr-compiled-git
  type: git
  source:
    branch: master
    uri: https://github.com/starkandwayne/cfcr-compiled-deployment.git

- name: bbl-state-resource-src
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bbl-state-resource.git
    private_key: ((cf_infra_bot_github_user.private_key))
    ignore_paths:
      - docs/**
      - README.md

- name: bbl-state-resource-release-docker
  type: docker-image
  source:
    tag: ci
    repository: cfinfrastructure/bbl-state-resource
    username: ((docker_user.username))
    password: ((docker_user.password))
    email: ((docker-email))

jobs:
- name: bbl-state-resource-units
  public: false
  plan:
  - get: bbl-state-resource-src
    trigger: true
  - task: run-units
    file: bbl-state-resource-src/ci/run-units-task.yml

- name: build-bbl-state-release-docker
  public: false
  plan:
  - aggregate:
    - get: bbl-state-resource-release-docker
    - get: bbl-state-resource-src
      trigger: true
      passed:
      - bbl-state-resource-units
    - get: bbl-release
      trigger: true
      resource: bbl-release-official
      params:
        version: { tag: bbl-release/number }
        globs:
        - bbl-*_linux_x86-64
  - task: format-version-as-json
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfinfrastructure/golang
      inputs:
      - name: bbl-release
      outputs:
      - name: docker-build-args
      run:
        path: bash
        args:
          - "-c"
          - >-
            printf '{"bbl_version": "%s"}' $(cat bbl-release/version) > docker-build-args/json
  - put: bbl-state-resource-release-docker
    params:
      build: bbl-state-resource-src
      build_args_file: docker-build-args/json
      tag: bbl-state-resource-release-docker/tag
  - task: sleep-so-that-concourse-uses-our-new-image
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cfinfrastructure/golang
      run:
        path: sleep
        args: [ 100 ]

- name: bbl-state-resource-acceptance
  public: false
  serial: true
  plan:
  - aggregate:
    - get: bbl-state-resource-release-docker
      passed: [build-bbl-state-release-docker]
      trigger: true
    - get: bbl-state-resource-src
      trigger: true
      passed: [build-bbl-state-release-docker]
  - task: run-acceptance
    image: bbl-state-resource-release-docker
    file: bbl-state-resource-src/ci/run-acceptance-task.yml
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((bbl_gcp_service_account_key))

- name: bbl-pool-up
  public: false
  plan:
  - aggregate:
    - get: bbl-state-resource-src
      passed:
        - build-bbl-state-release-docker
    - get: bbl-state-resource-release-docker
      trigger: true
      passed:
        - build-bbl-state-release-docker
    - get: cfcr-compiled-git
    - get: ubuntu-xenial-stemcell-gcp
  - put: bbl-state-up
    resource: test-bbl-state
    params:
      command: up
    on_failure:
      put: test-bbl-state
      params:
        state_dir: bbl-state
        command: down
  - put: bbl-state-pool
    params:
      add_claimed: bbl-state-up
  - put: cfcr-bosh-deployment
    params:
      source_file: bbl-state-pool/metadata
      manifest: cfcr-compiled-git/cfcr.yml
      stemcells: [ ubuntu-xenial-stemcell-gcp/stemcell.tgz ]
      ops_files:
        - cfcr-compiled-git/ops-files/use-runtime-config-bosh-dns.yml
    ensure:
      do:
      - put: cfcr-bosh-deployment
        params:
          source_file: bbl-state-pool/metadata
          delete:
            enabled: true
            force: true
      - put: test-bbl-state
        params:
          name_file: bbl-state-pool/name
          command: "down"
        on_success:
          put: bbl-state-pool
          params:
            remove: bbl-state-up

- name: bbl-up
  public: false
  plan:
  - aggregate:
    - get: bbl-state-resource-src
      passed:
        - build-bbl-state-release-docker
    - get: bbl-state-resource-release-docker
      trigger: true
      passed:
        - build-bbl-state-release-docker
    - get: cfcr-compiled-git
    - get: ubuntu-xenial-stemcell-gcp
  - do:
    - put: test-bbl-state
      params:
        command: "up"
        plan_patches:
        - bosh-bootloader/plan-patches/cfcr-gcp
    - put: cfcr-bosh-deployment
      params:
        source_file: test-bbl-state/bdr-source-file
        manifest: cfcr-compiled-git/cfcr.yml
        stemcells: [ ubuntu-xenial-stemcell-gcp/stemcell.tgz ]
        ops_files:
          - cfcr-compiled-git/ops-files/use-runtime-config-bosh-dns.yml
    - put: cfcr-bosh-deployment
      params:
        source_file: test-bbl-state/bdr-source-file
        delete:
          enabled: true
          force: true
    ensure:
      put: test-bbl-state
      params:
        state_dir: test-bbl-state # test that configuring state dir behaves appropriately
        command: "down"

- name: bbl-state-resource-tag-latest
  public: false
  plan:
  - get: bbl-state-resource-release-docker
    trigger: true
    passed:
      - bbl-up
      - bbl-pool-up
      - bbl-state-resource-acceptance
    params:
      save: true
  - put: bbl-state-resource-release-docker
    params:
      tag_as_latest: true
      load: bbl-state-resource-release-docker
