resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: beta-backend

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: terraforming-azure
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/terraforming-azure.git
    private_key: ((cf_infra_bot_github_user.private_key))

- name: terraforming-gcp
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/terraforming-gcp.git
    private_key: ((cf_infra_bot_github_user.private_key))

- name: env-state-gcp
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: infra-tf-states
      prefix: gcp
      region: us-central1
      credentials: ((cf_infra_gcp_service_account_key))

- name: opsman-image
  type: pivnet
  source:
    product_slug: ops-manager
    api_token: ((pivnet_token))
    product_version: ^\d+\.\d+\.\d+
    sort_by: semver

- name: srt
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: elastic-runtime
    product_version: ^\d+\.\d+\.\d+
    sort_by: semver

- name: terraforming-vsphere
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/terraforming-vsphere.git
    private_key: ((cf_infra_bot_github_user.private_key))

- name: pcf-releng-ci
  type: git
  source:
    uri: git@github.com:pivotal-cf/pcf-releng-ci.git
    private_key: ((cf_infra_bot_github_user.private_key))
    ignore_paths:
    - pipelines
    - ci_screen

- name: infrastructure-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/infrastructure-ci.git

- name: gate-lock
  type: pool
  source:
    uri: git@github.com:cloudfoundry/infrastructure-ci-deployment-locks.git
    branch: master
    pool: terraforming
    private_key: ((cf_infra_bot_github_user.private_key))

shared:
- params: &om-creds
    OM_USERNAME: ((om_username))
    OM_PASSWORD: ((om_password))

jobs:
- name: create-env-gcp
  serial: true
  public: false
  plan:
  - aggregate:
    - get: terraforming-gcp
      trigger: true
    - get: ci
      resource: infrastructure-ci
    - get: opsman-image
      params:
        globs:
        - '*GCP.yml'
  - put: gate-lock
    params:
      claim: gcp
    timeout: 5h
  - task: setup-terraform-vars
    file: ci/scripts/terraforming/gcp/setup-terraform-vars/task.yml
    params:
      GCP_PROJECT_ID: ((cf_infra_gcp_project_id))
      GCP_SERVICE_ACCOUNT_KEY: ((cf_infra_gcp_service_account_key))
      GCP_SSL_CERT: ((ssl_cert.certificate))
      GCP_SSL_PRIVATE_KEY: ((ssl_cert.private_key))
  - put: env-state-gcp
    params:
      generate_random_name: true
      var_files: [tfvars/terraform.tfvars]
      terraform_source: terraforming-gcp
      delete_on_failure: true

- name: prepare-gcp
  serial: true
  plan:
  - aggregate:
    - get: terraforming-gcp
      passed: [create-env-gcp]
    - get: env-state-gcp
      passed: [create-env-gcp]
      trigger: true
    - get: ci
      resource: infrastructure-ci
    - get: pcf-releng-ci
    - get: srt
      params:
        globs:
        - srt-*.pivotal
    - get: gate-lock
      passed: [create-env-gcp]
  - task: download-stemcell
    file: pcf-releng-ci/tasks/configuration/download-pivnet-stemcell/task.yml
    input_mapping:
      ert-product: srt
    params:
      IAAS_TYPE: gcp
      PIVNET_TOKEN: ((pivnet_token))
  - task: add-to-gcp-dns
    file: ci/scripts/common/manage-gcp-dns/task-terraforming.yml
    params:
      GCP_DNS_PROJECT_ID: ((cf_infra_gcp_project_id))
      GCP_DNS_SERVICE_ACCOUNT_EMAIL: ((cf_infra_gcp_service_account_email))
      GCP_DNS_SERVICE_ACCOUNT_KEY: ((cf_infra_gcp_service_account_key))
      GCP_DNS_ZONE_NAME: infrastructure
      GCP_DNS_SUFFIX: gcp.infrastructure.cf-app.com
      ACTION: add
    input_mapping:
      env-state: env-state-gcp
  - task: check-dns
    file: pcf-releng-ci/tasks/configuration/check-dns/task.yml
    input_mapping:
      terraform-state: env-state-gcp
    timeout: 5m
  - task: configure-director
    file: ci/scripts/terraforming/gcp/configure-bosh-director/task.yml
    params:
      <<: *om-creds
      GCP_SERVICE_ACCOUNT_KEY: ((cf_infra_gcp_service_account_key))
    input_mapping:
      env-state: env-state-gcp
  - task: upload-configure-stage-srt
    file: ci/scripts/terraforming/upload-configure-stage/task.yml
    params:
      <<: *om-creds
      PRODUCT_NAME: cf
      PRODUCT_CONFIG_TEMPLATE: scripts/terraforming/upload-configure-stage/srt-config-template.yml
    input_mapping:
      env-state: env-state-gcp
      product: srt
      product-config-repo: ci

- name: deploy-gcp
  serial: true
  plan:
  - aggregate:
    - get: terraforming-gcp
      passed: [prepare-gcp]
    - get: env-state-gcp
      passed: [prepare-gcp]
      trigger: true
    - get: ci
      resource: infrastructure-ci
    - get: gate-lock
      passed: [prepare-gcp]
  - task: deploy-srt
    file: ci/scripts/terraforming/apply-changes/task.yml
    params:
      <<: *om-creds
    input_mapping:
      env-state: env-state-gcp

- name: destroy-gcp
  serial: true
  plan:
  - aggregate:
    - get: terraforming-gcp
      passed: [deploy-gcp]
    - get: env-state-gcp
      passed: [deploy-gcp]
      trigger: true
    - get: ci
      resource: infrastructure-ci
    - get: pcf-releng-ci
    - get: opsman-image
      params:
        globs:
        - '*GCP.yml'
    - get: gate-lock
      passed: [deploy-gcp]
  - task: setup-terraform-vars
    file: ci/scripts/terraforming/gcp/setup-terraform-vars/task.yml
    params:
      GCP_PROJECT_ID: ((cf_infra_gcp_project_id))
      GCP_SERVICE_ACCOUNT_KEY: ((cf_infra_gcp_service_account_key))
      GCP_SSL_CERT: ((ssl_cert))
      GCP_SSL_PRIVATE_KEY: ((ssl_private_key))
  - task: delete-installation
    file: pcf-releng-ci/tasks/environment/delete-installation/task.yml
    params:
      OPSMAN_USERNAME: ((om_username))
      OPSMAN_PASSWORD: ((om_password))
      OPSMAN_URL_SUFFIX: gcp.infrastructure.cf-app.com
    input_mapping:
      environment: env-state-gcp
  - task: remove-from-gcp-dns
    file: ci/scripts/common/manage-gcp-dns/task-terraforming.yml
    params:
      GCP_DNS_PROJECT_ID: ((cf_infra_gcp_project_id))
      GCP_DNS_SERVICE_ACCOUNT_EMAIL: ((cf_infra_gcp_service_account_email))
      GCP_DNS_SERVICE_ACCOUNT_KEY: ((cf_infra_gcp_service_account_key))
      GCP_DNS_ZONE_NAME: infrastructure
      GCP_DNS_SUFFIX: gcp.infrastructure.cf-app.com
      ACTION: remove
    input_mapping:
      env-state: env-state-gcp
  - put: env-state-gcp
    params:
      env_name_file: env-state-gcp/name
      var_files: [tfvars/terraform.tfvars]
      terraform_source: terraforming-gcp
      action: destroy
    get_params:
      action: destroy
  - put: gate-lock
    params:
      release: gate-lock

- name: terraforming-azure
  serial: true
  public: false
  plan:
  - aggregate:
    - get: terraforming-azure
      trigger: true
    - get: ci
      resource: infrastructure-ci
  - task: apply-and-destroy
    file: ci/scripts/terraforming/azure/task.yml
    params:
      AZURE_SUBSCRIPTION_ID: ((azure_subscription_id))
      AZURE_TENANT_ID: ((azure_tenant_id))
      AZURE_CLIENT_ID: ((azure_client_id))
      AZURE_CLIENT_SECRET: ((azure_client_secret))
      AZURE_VM_ADMIN_PASSWORD: ((azure_vm_admin_password))

- name: terraforming-vsphere
  serial: true
  public: false
  plan:
  - aggregate:
    - get: terraforming-vsphere
      trigger: true
    - get: ci
      resource: infrastructure-ci
  - task: apply-and-destroy
    file: ci/scripts/terraforming/vsphere/task.yml
    tags: [khaleesi]
    params:
      VSPHERE_NETWORK: ((vsphere_network_name))
      VSPHERE_OM_IP: ((vsphere_om_ip))
      VSPHERE_OM_DNS: ((vsphere_om_dns))
      VSPHERE_OM_NTP: ((vsphere_om_ntp))
      VSPHERE_OM_TEMPLATE: ((vsphere_om_template))
      VSPHERE_OM_ADMIN_PASSWORD: ((vsphere_om_admin_password))
      VSPHERE_GW_IP: ((vsphere_gw_ip))
      VSPHERE_VCENTER_IP: ((vsphere_vcenter_ip))
      VSPHERE_VCENTER_USER: ((vsphere_vcenter_user))
      VSPHERE_VCENTER_PASSWORD: ((vsphere_vcenter_password))
      VSPHERE_VCENTER_DC: ((vsphere_vcenter_dc))
      VSPHERE_VCENTER_CLUSTER: ((vsphere_vcenter_cluster))
      VSPHERE_VCENTER_RP: ((vsphere_vcenter_rp))
      VSPHERE_VCENTER_DS: ((vsphere_vcenter_ds))
      VSPHERE_VCENTER_DISKS: ((vsphere_vcenter_disks))
      VSPHERE_VCENTER_VMS: ((vsphere_vcenter_vms))
      VSPHERE_VCENTER_TEMPLATES: ((vsphere_vcenter_templates))
