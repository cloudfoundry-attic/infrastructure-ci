#!/bin/bash -exu

ROOT=${PWD}
BBL_STATE_DIR="${ROOT}/bbl-state-dir"

function main() {
  bbl_up
  upload_stemcell
  upload_dependencies
  create_and_upload_release
  deploy_manifests
}

function bbl_up() {
  mkdir -p "${BBL_STATE_DIR}"
  pushd "${BBL_STATE_DIR}" > /dev/null
    bbl up --iaas gcp
    eval "$(bbl print-env)"
  popd
}

function upload_stemcell() {
  bosh upload-stemcell "${ROOT}/gcp-stemcell/stemcell.tgz"
}

function upload_dependencies() {
  for dependency in ${DEPENDENCIES}; do
    bosh -n upload-release "https://bosh.io/d/github.com/${dependency}"
  done
}

function create_and_upload_release() {
  pushd "${ROOT}/release" > /dev/null
    bosh -n create-release --force
    bosh -n upload-release
  popd > /dev/null
}

function deploy_manifests() {
  pushd "${ROOT}/release" > /dev/null
    for manifest in ${MANIFESTS}; do
      local name
      name="$(bosh int ${manifest} --path /name)"
      local base_manifest_name
      base_manifest_name="$(basename ${manifest} .yml)"
      bosh -n -d "${name}" deploy "${manifest}" --vars-store "${base_manifest_name}-store.yml"
    done
  popd > /dev/null
}

function destroy_boshlite() {
  for i in $(bosh deployments | awk '{ print $1 }' | uniq); do
    bosh -d $i -n delete-deployment
  done

  bosh -n clean-up --all
  bbl --state-dir ${BBL_STATE_DIR} destroy --no-confirm
}

trap destroy_boshlite EXIT

main "${ROOT}"
