#!/bin/bash -exu

ROOT="${PWD}"

function write_service_account_key_to_file() {
  local service_account_path
  service_account_path="$1"

  set +x
    echo "${GCP_DNS_SERVICE_ACCOUNT_KEY}" > "${service_account_path}"
  set -x
}

function main() {
  local gcp_service_account_key_path
  gcp_service_account_key_path="/tmp/service_account_key.json"

  write_service_account_key_to_file "${gcp_service_account_key_path}"
  gcloud auth activate-service-account "${GCP_DNS_SERVICE_ACCOUNT_EMAIL}" --key-file="${gcp_service_account_key_path}"

  # Check for re-entrance
  local zone_info
  zone_info=$(gcloud --project="${GCP_DNS_PROJECT_ID}" dns record-sets list -z "${GCP_DNS_ZONE_NAME}" --filter "${GCP_DNS_RECORD_SET_NAME}" 2> /dev/null)

  if [[ "${ACTION}" = "add" && -n "${zone_info}" ]]; then
    echo "DNS entry for \"${GCP_DNS_RECORD_SET_NAME}\" already exists in zone \"${GCP_DNS_ZONE_NAME}\"."
    return
  fi

  if [[ "${ACTION}" = "remove" && -z "${zone_info}" ]]; then
    echo "DNS entry for \"${GCP_DNS_RECORD_SET_NAME}\" not found in zone \"${GCP_DNS_ZONE_NAME}\"."
    return
  fi

  local dns_servers
  dns_servers=()
  if [[ -d "${ROOT}/bbl-states-repo" ]]; then
    for dns_server in $(bbl --state-dir "${ROOT}/bbl-states-repo/${BBL_STATE_DIR}" lbs --json | jq -r ".cf_system_domain_dns_servers[] | ."); do
      dns_servers+=("${dns_server}")
    done
  else
    dns_servers=($(jq -r ".env_dns_zone_name_servers | map(\"--name-server \" + .) | join(\" \")" env-state/metadata))
  fi

  gcloud --project="${GCP_DNS_PROJECT_ID}" dns record-sets transaction start -z "${GCP_DNS_ZONE_NAME}"
  gcloud --project="${GCP_DNS_PROJECT_ID}" dns record-sets transaction "${ACTION}" -z "${GCP_DNS_ZONE_NAME}" \
    --name "${GCP_DNS_RECORD_SET_NAME}" \
    --ttl "${GCP_DNS_RECORD_TTL}" \
    --type NS \
    "${dns_servers[@]}"
  gcloud --project="${GCP_DNS_PROJECT_ID}" dns record-sets transaction execute -z "${GCP_DNS_ZONE_NAME}"
}

main
