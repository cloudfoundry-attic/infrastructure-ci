#!/bin/bash -exu

pushd terraforming-vsphere > /dev/null

  terraform init

  trap 'terraform destroy -force; exit' EXIT

  set +x

    echo 'env_name = "terraforming-vsphere-env"' > terraform.tfvars
    echo "om_ipv4_address = \"${VSPHERE_OM_IP}\"" >> terraform.tfvars
    echo 'om_netmask0 = "255.255.255.0"' >> terraform.tfvars
    echo "om_gateway = \"${VSPHERE_GW_IP}\"" >> terraform.tfvars
    echo "om_dns = \"${VSPHERE_OM_DNS}\"" >> terraform.tfvars
    echo "om_ntp_servers = \"${VSPHERE_OM_NTP}\"" >> terraform.tfvars
    echo "om_template = \"${VSPHERE_VCENTER_TEMPLATES}/${VSPHERE_OM_TEMPLATE}\"" >> terraform.tfvars
    echo "om_admin_password = \"${VSPHERE_OM_PASSWORD}\"" >> terraform.tfvars

    echo "vcenter_user = \"${VSPHERE_VCENTER_USER}\"" >> terraform.tfvars
    echo "vcenter_password = \"${VSPHERE_VCENTER_PASSWORD}\"" >> terraform.tfvars
    echo "vcenter_server = \"${VSPHERE_VCENTER_IP}\"" >> terraform.tfvars
    echo "vcenter_dc = \"${VSPHERE_VCENTER_DC}\"" >> terraform.tfvars
    echo "vcenter_cluster = \"${VSPHERE_VCENTER_CLUSTER}\"" >> terraform.tfvars
    echo "vcenter_rp = \"${VSPHERE_VCENTER_RP}\"" >> terraform.tfvars
    echo "vcenter_ds = \"${VSPHERE_VCENTER_DS}\"" >> terraform.tfvars
    echo "vcenter_network = \"${VSPHERE_VCENTER_NETWORK}\"" >> terraform.tfvars
    echo "vcenter_vms = \"${VSPHERE_VCENTER_VMS}\"" >> terraform.tfvars

    echo "allow_unverified_ssl = true" >> terraform.tfvars

  set -x

  terraform validate

  terraform plan -out=plan

  TF_LOG=TRACE TF_LOG_PATH=tf-logs.txt terraform apply plan

  terraform destroy -force

popd > /dev/null
