#!/bin/bash -exu

ROOT="${PWD}"
BBL_VERSION=$(cat "${ROOT}/bbl-version/number")
BBL_LINUX_BUILD_PATH="${ROOT}/builds/bin/bbl-v${BBL_VERSION}_linux_x86-64"
BBL_OSX_BUILD_PATH="${ROOT}/builds/bin/bbl-v${BBL_VERSION}_osx"
BBL_WINDOWS_BUILD_PATH="${ROOT}/builds/bin/bbl-v${BBL_VERSION}_windows"

function main() {
  local bosh_bootloader_commit_sha
  local deployment_versions

  mkdir -p "${GOPATH}/src/github.com/cloudfoundry/"
  ln -s "${ROOT}/bosh-bootloader" "${GOPATH}/src/github.com/cloudfoundry/"

  bosh_bootloader_commit_sha=$(git -C "${ROOT}/bosh-bootloader" rev-parse HEAD)
  deployment_versions=$(cat "${ROOT}/bosh-bootloader/deployment-versions.txt")

  pushd "${GOPATH}/src/github.com/cloudfoundry/bosh-bootloader/bbl" > /dev/null
    build_bbl
  popd > /dev/null

  pushd "${ROOT}/builds" > /dev/null
    echo -n "v${BBL_VERSION}" > name
    echo -n "${bosh_bootloader_commit_sha}" > commitish

    if ! [ -z "${BUMP_DEPLOYMENTS}" ];
    then
      echo "This release only includes changes to deployment manifests." > body
    fi
    echo "${deployment_versions}" >> body

    linux_sha=$(shasum -a 256 "${BBL_LINUX_BUILD_PATH}" | cut -d ' ' -f 1)
    osx_sha=$(shasum -a 256 "${BBL_OSX_BUILD_PATH}" | cut -d ' ' -f 1)
    windows_sha=$(shasum -a 256 "${BBL_WINDOWS_BUILD_PATH}" | cut -d ' ' -f 1)

    echo "- *Linux sha256: \`${linux_sha}\`*" >> body
    echo -n "- *OSX sha256: \`${osx_sha}\`*" >> body
    echo "- *Windows sha256: \`${windows_sha}\`*" >> body
    echo "*Known Issues:* Windows support is incomplete." >> body
  popd > /dev/null
}

function build_bbl() {
  echo "Building 64-bit Linux"
  CGO_ENABLED=0 GOARCH=amd64 GOOS=linux \
    go build -a -tags netgo -installsuffix netgo \
    -ldflags "-X main.Version=${BBL_VERSION}" \
    -o "${BBL_LINUX_BUILD_PATH}" .

  echo "Building 64-bit Darwin"
  GOARCH=amd64 GOOS=darwin \
    go build \
    -ldflags "-X main.Version=${BBL_VERSION}" \
    -o "${BBL_OSX_BUILD_PATH}" .

  echo "Building 64-bit Windows"
  CGO_ENABLED=0 GOARCH=amd64 GOOS=windows \
    go build \
    -ldflags "-X main.Version=${BBL_VERSION}" \
    -o "${BBL_WINDOWS_BUILD_PATH}" .

  echo "Testing 32-bit platform"
  CGO_ENABLED=0 GOARCH=386 GOOS=freebsd \
    go build \
    -ldflags "-X main.Version=${BBL_VERSION}" \
    -o "/tmp/" .
}

main
